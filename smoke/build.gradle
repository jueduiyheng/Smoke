apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=gnu++11"
                arguments "-DCMAKE_BUILD_TYPE=Debug"
            }
        }

        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
//            abiFilters 'x86', 'x86_64', 'armeabi', 'armeabi-v7a',
//                    'arm64-v8a'
//            abiFilters 'armeabi', 'armeabi-v7a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            externalNativeBuild {
                cmake {
                    targets 'smoke-lib'
                }
            }
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

ext {
    groupId = 'com.mingyuans.android'
    artifactId = 'smoke'
    version = '1.0.0-SHAPSHOT'

    siteUrl = "http://www.mingyuans.me"
    gitUrl = "https://github.com/mingyuans/Smoke.git"
}

group = project.ext.groupId
version = project.ext.version

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                url project.ext.siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'mingyuans'
                        name 'mingyuans'
                        email 'yanxqwork@gmail.com'
                    }
                }
                scm {
                    connection project.ext.gitUrl
                    developerConnection project.ext.gitUrl
                    url project.ext.siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

def boolean isSnapshot() {
    def versionString = project.version as String;
    return versionString.endsWith("SHAPSHOT");
}

Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    override = true
    pkg {
        repo = "maven"
        name = isSnapshot()? project.ext.artifactId + "-snapshot" : project.ext.artifactId;

        websiteUrl = project.siteUrl
        vcsUrl = project.gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
}
